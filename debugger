#!/bin/bash

# Define the target host and the SSH credentials
read -p "Enter the target IP to ping: " TARGET_IP
if [ -z "$1" ]; then
  echo "No message supplied please add a message"
  exit 1
fi
argument=$1
echo " $argument"
# Use the argument
argument=$1
TARGET_HOST="172.16.1.101"
SSH_USER="admin"
SSH_PASS="Jaskirat2512+"
INPUT_FILE="commands.txt"
SSH_COMMANDS=$(tr '\n' '; ' < "$INPUT_FILE")
OUTPUT_FILE="/logs_junos/log_output.txt"
BGP_OUTPUT="/logs_junos/BGP.txt"
NEW_BGP_OUTPUT="/logs_junos/BGP_NEW.txt"
OG_TEXT="/logs_junos/OG.txt"

# Function to check ping and handle failures
monitor_ping() {
    local ping_fail_count=0

    while true; do
        if ping -c 1 $TARGET_IP &> /dev/null; then
            echo "$(date): Ping to $TARGET_IP successful"
            ping_fail_count=0
        else
            echo "$(date): Ping to $TARGET_IP failed"
            ((ping_fail_count++))
        fi

        if [ $ping_fail_count -ge 1 ]; then
            echo "$(date): 3 consecutive pings failed, SSHing to $TARGET_IP"
            ssh_run_commands
           
            ping_fail_count=0
        fi

        #sleep 5 # Interval between pings
    done
}

# Function to SSH to the target host and run commands
ssh_run_commands() {
    sshpass -p $SSH_PASS ssh $SSH_USER@$TARGET_HOST  "$SSH_COMMANDS" > $OUTPUT_FILE 2>&1

    if [ $? -eq 0 ]; then
        echo "$(date): Commands executed successfully, output saved to $OUTPUT_FILE"
	echo "reading the file and getting BGP routes"
	grep -i "BGP" "$OUTPUT_FILE" > $BGP_OUTPUT
        awk {'print $1'} "$BGP_OUTPUT" > $NEW_BGP_OUTPUT
	echo "Got the routes and comparing now and printing if a route is missing"
	diff "$NEW_BGP_OUTPUT" "$OG_TEXT"	
	echo "Adding this route as a static route to temp fix the issue"
    else

        echo "$(date): Failed to execute commands"
    fi
}

# Start monitoring pings
monitor_ping
 
